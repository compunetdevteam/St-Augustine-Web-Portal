@*@model IEnumerable<SwiftSkool.Models.AssignSubject>*@
@model PagedList.IPagedList<SwiftSkool.Models.AssignSubject>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Assigned Subjects";
}

@using (Html.BeginForm("Index", "AssignSubjects", FormMethod.Get, new { @class = "form-inline" }))
{
    <!-- BEGIN INLINE FORM -->
    <div class="row">
        <div class="col-lg-7">
            <article class="margin-bottom-xxl">
                <p class="lead">
                    Please use the following parameters to perform Query
                </p>
            </article>
        </div><!--end .col -->
        <div class="col-lg-12">
            <form class="form-inline">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            @Html.DropDownList("ClassName", null, htmlAttributes: new { @class = "form-control" })
                            <label for="ClassName">ClassName</label>
                        </div>

                        <button type="submit" data-toggle="tooltip" data-placement="top" title="Search Subject by Class!" class="btn btn-raised btn-warning-light ink-reaction"><i class="fa fa-search"></i> View Subject</button>
                    </div><!--end .card-body -->
                </div><!--end .card -->

            </form>
        </div><!--end .col -->
    </div>

    <!--end .row -->
    <!-- END INLINE FORM -->
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Class Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Subject Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubjectName)
            </td>
            <td>
                <span>
                    <a href="@Url.Action("Edit", new {id = item.AssignSubjectId, @class = "btn btn-success" })"><span class="md-mode-edit"></span> Edit</a>
                </span> |
                <span>
                    <a href="@Url.Action("Delete", new {id = item.AssignSubjectId, @class = "btn btn-success" })"><span class="md-delete"></span> Delete</a>
                </span>
                @*@Html.ActionLink("Edit", "Edit", new { id=item.AssignSubjectId }) |
            @Html.ActionLink("Details", "Details", new { id=item.AssignSubjectId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.AssignSubjectId })*@
            </td>
        </tr>
    }

</table>

<br />
<div class="btn-group pull-right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder = ViewBag.CurrentSort,
    currentFilter =
    ViewBag.CurrentFilter
}))
</div>
<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip();
});
</script>