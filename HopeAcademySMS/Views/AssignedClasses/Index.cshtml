@*@model IEnumerable<StAugustine.Models.AssignedClass>*@
@model PagedList.IPagedList<StAugustine.Models.AssignedClass>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "AssignedClasses", FormMethod.Get))
{
    <div class="form-group">
        <input type="text" class="form-control" name="search" placeholder="Enter your keyword">
    </div>
    <button type="submit" class="btn btn-icon-toggle ink-reaction"><i class="fa fa-search"></i></button>
}
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.StudentId)*@
            @Html.ActionLink("Student ID", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Class Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.ClassName)*@
        </th>
        <th>
            Term Name
        </th>
        <th>
            Session Name
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TermName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SessionName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.AssignedClassId }) |
                @Html.ActionLink("Details", "Details", new { id=item.AssignedClassId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.AssignedClassId })
            </td>
        </tr>
    }

</table>
<br />
<div class="btn-group pull-right">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder = ViewBag.CurrentSort,
    currentFilter =
    ViewBag.CurrentFilter
}))
</div>

